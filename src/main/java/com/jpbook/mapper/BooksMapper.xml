<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.jpbook.dao.BooksDao">
    <select id="queryRecommend" parameterType="Integer" resultType="map">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookstate,b.bookreferral,bt.btid,bt.btname,ifnull(s4.chaptime,'') chaptime,ifnull(s4.chapid,-1) chapid,ifnull(s4.chapnum,-1) chapnum,ifnull((select chapname from chapter where chapid = s4.chapid),'暂时还没有章节') chapname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,v.dvote,v.mvote,v.zvote
        from users u inner join books b on u.uuid = b.uuid
        inner join booktype bt on b.btid = bt.btid
        left join (select b.bookid,sum(case v.wtid when 1 then v.votenum else 0 end) dvote,sum(case v.wtid when 2 then v.votenum else 0 end) mvote,sum(case v.wtid when 1 then v.votenum when 2 then v.votenum else 0 end) zvote from  users u inner join books b on b.uuid=u.uuid left join vote v on b.bookid = v.bookid group by b.bookid) v on b.bookid = v.bookid
        left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid group by b.bookid order by r.rollid desc,c.chapnum desc) s4 on s4.bookid = b.bookid
        group by b.bookid
        order by v.dvote desc
        limit 0,18
    </select>


    <select id="queryClick" parameterType="Integer" resultType="map">
        select b.bookid,b.bookname,b.icon,bt.btname,bt.btid,u.pen,u.uname,u.uuid,sum(c.cnum) cnum from books b inner join click c on b.bookid = c.bookid inner join users u on c.uuid = u.uuid
        inner join booktype bt on b.btid = bt.btid where DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(c.clicktime)
        GROUP BY b.bookid,b.bookname,u.uname,bt.btname order by cnum desc
    </select>
    <select id="queryBtype" resultType="map">
        select b.bookid,bt.btid,b.bookname,bt.btname from books b inner join booktype bt on b.btid = bt.btid where b.bookstate=0
        group by b.bookid order by bt.btname limit 0,37
    </select>
    <select id = "queryNewBooks" resultType="map">
        select b.bookname,b.bookid,b.icon,b.bookreferral,u.pen,u.uname,u.uuid,bt.btid,ifnull(rpad(SUBSTRING(c.chapcount,1,1),CHAR_LENGTH(SUBSTRING(c.chapcount,1)),0),0) chapcount
        from books b inner join booktype bt on b.btid = bt.btid inner join users u on u.uuid = b.uuid left join roll r on r.bookid = b.bookid
        left join (select c.chapid,r.rollid,sum(c.chapcount) chapcount from chapter c,roll r where c.rollid=r.rollid GROUP BY r.bookid
        ) c on c.rollid = r.rollid WHERE b.bookstate=0 and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(b.createtime) GROUP BY b.bookid ORDER BY c.chapid desc

    </select>
    <select id = "queryQianli" resultType="map">
        select b.bookname,b.bookid,bt.btid,bt.btname,u.pen,u.uname,u.uuid,b.icon,sum(c.cnum*5) qianli from books b inner join booktype bt on b.btid = bt.btid inner join users u on b.uuid = u.uuid right join click c on c.bookid = b.bookid
        where DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(b.createtime) and b.bookstate=0
        group by b.bookname order by qianli desc
    </select>
    <select id="queryWanben" resultType="map">
        select b.bookid,b.bookname,b.icon,b.bookreferral,u.pen,u.uname,u.uuid,bt.btid,bt.btname,sum(c.chapcount),
        case CHAR_LENGTH(SUBSTRING(IFNULL(sum(c.chapcount),0),2))
        when 0 then 0
        when 1 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'十')
        when 3 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'千')
        when 2 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'百')
        when 4 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'万')
        when 5 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'十万')
        when 6 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'百万') end chapcount
        from books b inner join booktype bt on b.btid = bt.btid inner join users u on u.uuid = b.uuid left join roll r on r.bookid = b.bookid
        left join chapter c on c.rollid = r.rollid WHERE b.bookstate = 1 group by b.bookid order by chapcount desc
    </select>
    <select id ="queryJingwan" resultType="map">
        select b.bookid,b.bookname,b.icon,b.bookreferral,u.uname,u.uuid,u.pen,bt.btname,bt.btid,
        case IFNULL(CHAR_LENGTH(SUBSTRING(sum(c.chapcount),2)),0)
        when 0 then 0
        when 3 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'千')
        when 2 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'百')
        when 4 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'万')
        when 5 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'十万')
        when 6 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'百万') end chapcount
        from books b inner join booktype bt on b.btid = bt.btid inner join users u on u.uuid = b.uuid left join roll r on r.bookid = b.bookid
        left join chapter c on c.rollid = r.rollid WHERE b.bookstate = 1 and DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(b.endtime)
        group by b.bookid order by chapcount desc
    </select>
    <select id="queryBookById" parameterType="Integer" resultType="map">
        select b.bookid,b.bookname,ifnull(b.icon,'/img/0.jpg') icon,u.uname,u.pen,b.bookreferral,case bookstate when 0 then '连载' when 1 then '完本' end bookstate,bt.btid,bt.btname,ifnull(case CHAR_LENGTH(SUBSTRING(sum(c.chapcount),2))
        when 0 then 0
        when 1 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'十')
        when 3 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'千')
        when 2 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'百')
        when 4 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'万')
        when 5 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'十万')
        when 6 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'百万') end,0) chapcount,ifnull(ck.cnum,0) cnum,count(c.chapid) chapid,ifnull(s.chapnum,0) chapnum,ifnull(s.chapname,'暂时没有章节') chapname,
        ifnull(cou.chapscount,0) chapscount,ifnull(s.chaptime,'') chaptime,ifnull(reviewcount,0) reviewcount,ifnull(dvote,0) dvote,ifnull(mvote,0) mvote,ifnull(zvote,0) zvote,b.url
        from books b inner join booktype bt on b.btid = bt.btid join users u on b.uuid = u.uuid left join roll r on r.bookid = b.bookid left join chapter c
        on r.rollid = c.rollid left join (select b.bookid,sum(cnum) cnum from books b,click c where b.bookid = c.bookid and  b.bookid = #{param1} group by b.bookid) ck on b.bookid = ck.bookid left join (select bookid,count(revid) reviewcount from reviewbook where retype = 1 and bookid = #{param1}
        ) re on re.bookid=b.bookid left join (select bookid,sum(case wtid when 1 then votenum else 0 end) dvote,sum(case wtid when 2 then votenum else 0 end) mvote,sum(case wtid when 1 then votenum else votenum end) zvote from vote where bookid = #{param1} group by bookid) s1 on s1.bookid=b.bookid left join (select b.bookid,b.bookname,r.rollname,c.chaptime,c.chapname,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid where b.bookid = #{param1} order by r.rollid desc,c.chapnum desc limit 0,1) s on s.bookid=b.bookid left join (select b.bookid,count(b.bookid) chapscount,b.bookname,r.rollname,c.chapname,c.chapnum from books b inner join roll r on b.bookid = r.bookid inner join chapter c on c.rollid = r.rollid where b.bookid =#{param1} order by c.chapnum desc) cou on cou.bookid = b.bookid
        where b.bookid = #{param1}
        group by re.bookid
    </select>
    <select id="queryUsers" parameterType="Integer" resultType="map">
        select ifnull(u.icon,'../images/0.jpg') icon,u.grade,u.uuid,u.uname,u.pen,ifnull(u.self,'谁知道他很懒，没有想告诉你们的呢...') self,c.bookcount,f.chaptercount,t.days from users u,(select *,count(bookid) bookcount from books where uuid = (select uuid from users where uuid = (select uuid from books where bookid = #{param1}))) c,(select ifnull(round(sum(chapcount)/10000,2),0) chaptercount from chapter where rollid in (select rollid from roll where bookid in (select bookid from books where uuid = (select uuid from users where uuid = (select uuid from books where bookid = #{param1}))))) f,(select count(c.chaptime) days from books b left join roll r on r.bookid = b.bookid left join chapter c on c.rollid = r.rollid
        where b.bookid = #{param1} and date_format(c.chaptime,'%Y%m') = date_format(curdate(),'%Y%m')) t
        where c.uuid = u.uuid
    </select>
    <select id = "queryReviewbook" parameterType="Integer" resultType="map">
        select s1.*,ifnull(s2.zan,0) zan,ifnull(s3.uuid,-1) z
        from
        (select u.uuid,u.uname,u.pen,ifnull(u.icon,'../images/0.jpg') icon,rb.revvlue,count(rp.revid) rqcount,rb.commenttime,rb.revid from users u left join reviewbook rb on u.uuid = rb.uuid left join rbreply rp on rb.revid = rp.revid
        where rb.retype = 1 and rb.bookid = #{param1}
        group by rb.revid) s1 left join
        (select reviewid,count(zanid) zan from zan where zantype=1 and zstate = 1 GROUP BY reviewid) s2 on s2.reviewid=s1.revid
        left join (select * from zan where uuid = #{param2} and zantype = 1 and zstate = 1) s3 on s3.reviewid = s1.revid
        order by s1.revid desc
    </select>
    <select id = "queryRolls" resultType="map" parameterType="Integer">
        select ifnull(r.rollid,0) rollid,ifnull(r.rollname,'暂时还没有章节') rollname,count(c.chapid) sumchap,ifnull(sum(c.chapcount),0) chapcounts,r.rollmoney,case r.rollmoney when 1 then 'free' when 2 then 'vip' end rollstate from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid
        where b.bookid = #{param1} group by r.rollid
        order by r.rollnum
    </select>
    <select id = "queryChapters" parameterType="Integer" resultType="map">
        select b.bookid,r.rollid,r.rollname,c.chapid,c.chapnum,ifnull(c.chapname,'作者很懒还没有设置名字') chapname,c.chaptime,c.chapcount,ifnull(c.url,'javascript:void(0)') url,case r.rollmoney when 1 then '免费' when 2 then '收费' end vip,ifnull(bd.uuid,0) uuid from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid left join buyrecord bd on bd.chapid = c.chapid and bd.uuid = #{param2}
        where b.bookid = #{param1} and c.chapstate=1
        order by r.rollid,c.chapnum
    </select>
    <select id = "queryBuy" resultType="map" parameterType="Integer">
        select * from buyrecord where uuid = #{param1}
    </select>

    <select id = "queryZanById" resultType="map" parameterType="Integer">
        select * from zan where uuid = #{param1} and zantype = 1
    </select>
    <select id="zanExist" parameterType="Integer" resultType="com.jpbook.entity.Zan">
        select * from zan where reviewid = #{param1} and uuid = #{param2} and zantype = #{param3}
    </select>
    <update id="editZan" parameterType="Integer">
        update zan set zstate = #{param2} where reviewid = #{param1} and uuid = #{param3}
    </update>
    <insert id="addZan" parameterType="Integer">
        insert into zan values(null,#{param1},#{param3},#{param2},1)
    </insert>
    <select id="likeQueryBooks" resultType="map">
        select * from books where bookname like concat(#{param1},'%') limit 0,#{param2}
    </select>
    <select id = "likeBooks" resultType="map">
        select b.bookid,b.bookname,ifnull(b.icon,'/img/0.jpg') icon,u.pen,b.bookreferral,case bookstate when 0 then '连载' when 1 then '完本' end bookstate,bt.btid,bt.btname,ifnull(case CHAR_LENGTH(SUBSTRING(sum(c.chapcount),2))
        when 0 then 0 when 3 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'千') when 2 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'百')
        when 4 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'万') when 5 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'十万')
        when 6 then CONCAT(cast(SUBSTRING(sum(c.chapcount),1,1) as CHAR),'百万') end,0) chapcount,ifnull(ck.cnum,0) cnum,ifnull(s.chapid,-1) chapid,ifnull((select chapname from chapter where chapid = s.chapid),'暂时没有章节') chapname,ifnull(cou.chapscount,0) chapscount,ifnull(s.chaptime,'') chaptime,ifnull(dvote,0) dvote,ifnull(mvote,0) mvote,ifnull(zvote,0) zvote
        from books b inner join booktype bt on b.btid = bt.btid inner join users u on b.uuid = u.uuid
        left join roll r on r.bookid = b.bookid
        left join chapter c on r.rollid = c.rollid
        left join (select b.bookid,sum(cnum) cnum from books b,click c where b.bookid = c.bookid and b.bookname like concat('%',#{param1},'%') group by b.bookid) ck on b.bookid = ck.bookid
        left join (select b.bookid,b.bookname,sum(case v.wtid when 1 then v.votenum else 0 end) dvote,sum(case v.wtid when 2 then v.votenum else 0 end) mvote,sum(case v.wtid when 1 then v.votenum when 2 then v.votenum else 0 end) zvote from vote v right join books b on b.bookid = v.bookid inner join users u on b.uuid=u.uuid where b.bookname like concat('%',#{param1},'%') or u.pen like concat('%',#{param1},'%') group by v.bookid) s1 on s1.bookid=b.bookid
        left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from users u inner join books b on u.uuid = b.uuid or u.pen like concat('%',#{param1},'%') left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid where b.bookname like concat('%',#{param1},'%') group by b.bookid order by r.rollid desc,c.chapnum desc) s on s.bookid=b.bookid
        left join (select b.bookid,count(b.bookid) chapscount from users u inner join books b on u.uuid = b.uuid or u.pen like concat('%',#{param1},'%') inner join roll r on b.bookid = r.bookid inner join chapter c on c.rollid = r.rollid where b.bookname like concat('%',#{param1},'%') order by c.chapnum desc) cou on cou.bookid = b.bookid
        where b.bookname like concat('%',#{param1},'%') or u.pen like concat('%',#{param1},'%')
        group by b.bookid
        <if test="param4 != null">
            order by ${param4} desc
        </if>
        <if test="param2 != null and param3 != null ">
            limit #{param2},#{param3}
        </if>

    </select>
    <select id="queryBookByState" resultType="Map">
        select * from (
        select bs.bookid,bs.icon,bs.bookname,bs.uuid,u.pen,r.rollmoney,max(c.updatetime) updatetime,bt.btid,bs.bookstate,(case when bs.bookstate=0 then '连载中' else '完结' end) bookstatename,IFNULL(bs.bookreferral,'暂无简介') bookreferral,bt.btname,IFNULL(sum(c.chapcount),0) sum from
        books bs LEFT JOIN users u on bs.uuid=u.uuid left join booktype bt on bs.btid=bt.btid LEFT JOIN roll r on bs.bookid=r.bookid LEFT JOIN chapter c on r.rollid =c.rollid
        GROUP BY bs.bookid) s
        <where>
            <if test="param3!=null">
                and s.btid=#{param3}
            </if>
            <if test="param4!=null">
                and s.bookstate=#{param4}
            </if>
            <if test="param5!=null">
                and s.rollmoney=#{param5}
            </if>
            <if test="param6!=null">
                and s.updatetime > date_sub(SYSDATE(),interval #{param6} day)
            </if>
            <if test="param7!=null">
                and s.sum&gt;#{param7}
            </if>
            <if test="param8!=null">
                and s.sum&lt;#{param8}
            </if>
        </where>
        ORDER BY ${param9} desc
        LIMIT #{param1},#{param2}
    </select>
    <select id = "cankNewBook" parameterType="Integer" resultType="map">
        select s1.*,s3.mvote,ifnull(s4.chaptime,'') chaptime,ifnull(s4.chapid,-1) chapid,ifnull(s4.chapnum,-1) chapnum,ifnull((select chapname from chapter where chapid = s4.chapid),'暂时还没有章节') chapname from (select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookstate,b.bookreferral,bt.btid,bt.btname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid
        where  DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(b.createtime) and b.bookstate = 0) s1 inner join (select * from
        (select b.bookid,ifnull(sum(c.chapcount),0) chapcount from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid
        group by b.bookid) s where s.chapcount &lt; 200000) s2 on s1.bookid = s2.bookid left join (select b.bookid,sum(case v.wtid when 1 then v.votenum else 0 end) dvote,sum(case v.wtid when 2 then v.votenum else 0 end) mvote,sum(case v.wtid when 1 then v.votenum when 2 then v.votenum else 0 end) zvote from  users u inner join books b on b.uuid=u.uuid left join vote v on b.bookid = v.bookid group by b.bookid) s3 on s1.bookid = s3.bookid
        left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid group by b.bookid order by r.rollid desc,c.chapnum desc) s4 on s4.bookid = s1.bookid
        <if test="param2 != -1">
            where s1.btid = ${param2}
        </if>
        order by s3.mvote desc
        <if test="param1 != null">
            limit #{param1},10
        </if>
    </select>
    <select id="cankNewPenBook" parameterType="Integer" resultType="map">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookstate,b.bookreferral,bt.btid,bt.btname,ifnull(s4.chaptime,'') chaptime,ifnull(s4.chapid,-1) chapid,ifnull(s4.chapnum,-1) chapnum,ifnull((select chapname from chapter where chapid = s4.chapid),'暂时还没有章节') chapname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,p.pianli from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid
        and DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(b.createtime) and b.bookstate = 0
        left join (select c.bookid,c.cnum+m.dvote*5+p.bknum*2 pianli from (select b.bookid,ifnull(sum(c.cnum),0) cnum from books b left join click c on b.bookid = c.bookid and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(c.clicktime)
        group by b.bookid) c left join (select b.bookid,sum(case v.wtid when 1 then v.votenum else 0 end) dvote,sum(case v.wtid when 2 then v.votenum else 0 end) mvote,sum(case v.wtid when 1 then v.votenum when 2 then v.votenum else 0 end) zvote from  users u inner join books b on b.uuid=u.uuid left join vote v on b.bookid = v.bookid and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(v.votetime) group by b.bookid) m on c.bookid = m.bookid left join (select b.bookid,count(bk.brid) bknum from books b left join bookrack bk on b.bookid = bk.bookid
        group by b.bookid) p on m.bookid = p.bookid) p on b.bookid = p.bookid left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid group by b.bookid order by r.rollid desc,c.chapnum desc) s4 on s4.bookid = b.bookid
        <if test="param2 != -1">
            where b.btid = ${param2}
        </if>
        group by u.uuid
        order by p.pianli desc
        <if test="param1 != null">
            limit #{param1},10
        </if>
    </select>
    <select id="cankWeekClick" parameterType="Integer" resultType="map">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookstate,b.bookreferral,bt.btid,bt.btname,ifnull(s4.chaptime,'') chaptime,ifnull(s4.chapid,-1) chapid,ifnull(s4.chapnum,-1) chapnum,ifnull((select chapname from chapter where chapid = s4.chapid),'暂时还没有章节') chapname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,c.cnum from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid left join (select b.bookid,ifnull(sum(c.cnum),0) cnum from books b left join click c on b.bookid = c.bookid and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(c.clicktime)
        group by b.bookid) c on c.bookid = b.bookid left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid group by b.bookid order by r.rollid desc,c.chapnum desc) s4 on s4.bookid = b.bookid
        <if test="param2 != -1">
            where b.btid = ${param2}
        </if>
        group by b.bookid
        order by c.cnum desc
        <if test="param1 != null">
            limit #{param1},10
        </if>
    </select>

    <select id="cankQueryVote" resultType="map" parameterType="Integer">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookstate,b.bookreferral,bt.btid,bt.btname,ifnull(s4.chaptime,'') chaptime,ifnull(s4.chapid,-1) chapid,ifnull(s4.chapnum,-1) chapnum,ifnull((select chapname from chapter where chapid = s4.chapid),'暂时还没有章节') chapname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,v.dvote,v.mvote,v.zvote
        from users u inner join books b on u.uuid = b.uuid
        inner join booktype bt on b.btid = bt.btid
        left join (select b.bookid,sum(case v.wtid when 1 then v.votenum else 0 end) dvote,sum(case v.wtid when 2 then v.votenum else 0 end) mvote,sum(case v.wtid when 1 then v.votenum when 2 then v.votenum else 0 end) zvote from  users u inner join books b on b.uuid=u.uuid left join vote v on b.bookid = v.bookid group by b.bookid) v on b.bookid = v.bookid
        left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid group by b.bookid order by r.rollid desc,c.chapnum desc) s4 on s4.bookid = b.bookid
        <if test="param3 != -1">
            where b.btid = ${param3}
        </if>
        group by b.bookid
        <if test="param1 == 1">
            order by v.dvote desc
        </if>
        <if test="param1 == 2">
            order by v.mvote desc
        </if>
        <if test="param1 == 3">
            order by v.zvote desc
        </if>
        <if test="param2 != null">
            limit #{param2},10
        </if>
    </select>
    <select id="cankBookrack" parameterType="Integer" resultType="map">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookstate,b.bookreferral,bt.btid,bt.btname,ifnull(s4.chaptime,'') chaptime,ifnull(s4.chapid,-1) chapid,ifnull(s4.chapnum,-1) chapnum,ifnull((select chapname from chapter where chapid = s4.chapid),'暂时还没有章节') chapname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,bc.bknum from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid left join (select b.bookid,count(bk.brid) bknum from books b left join bookrack bk on b.bookid = bk.bookid
        group by b.bookid) bc on b.bookid = bc.bookid
        left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid group by b.bookid order by r.rollid desc,c.chapnum desc) s4 on s4.bookid = b.bookid
        <if test="param2 != -1">
            where b.btid = ${param2}
        </if>
        order by bc.bookid
        <if test="param1 != null">
            limit #{param1},10
        </if>
    </select>
    <select id="cankWanben" parameterType="Integer" resultType="map">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,bt.btid,bt.btname,b.bookstate,b.bookreferral,ifnull(s4.chaptime,'') chaptime,ifnull(s4.chapid,-1) chapid,ifnull(s4.chapnum,-1) chapnum,ifnull((select chapname from chapter where chapid = s4.chapid),'暂时还没有章节') chapname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,c.cnum from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid left join
        (select b.bookid,ifnull(sum(c.cnum),0) cnum from books b left join click c on b.bookid = c.bookid
        <if test="param1 == 1">
            and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(c.clicktime)
        </if>
        <if test="param1 == 2">
            and DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(c.clicktime)
        </if>
        where b.bookstate = 1
        group by b.bookid) c on c.bookid = b.bookid
        left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid group by b.bookid order by r.rollid desc,c.chapnum desc) s4 on s4.bookid = b.bookid
        where b.bookstate = 1
        <if test="param3 != -1">
            and b.btid = ${param3}
        </if>
        order by c.cnum desc
        <if test="param2 != null">
            limit #{param2},10
        </if>
    </select>
    <select id="cankQianli" resultType="map" parameterType="Integer">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookstate,b.bookreferral,bt.btid,bt.btname,ifnull(s4.chaptime,'') chaptime,ifnull(s4.chapid,-1) chapid,ifnull(s4.chapnum,-1) chapnum,ifnull((select chapname from chapter where chapid = s4.chapid),'暂时还没有章节') chapname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,p.pianli from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid and b.bookstate = 0
        left join (select c.bookid,c.cnum+m.dvote*5+p.bknum*2 pianli from (select b.bookid,ifnull(sum(c.cnum),0) cnum from books b left join click c on b.bookid = c.bookid and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(c.clicktime)
        group by b.bookid) c left join (select b.bookid,sum(case v.wtid when 1 then v.votenum else 0 end) dvote,sum(case v.wtid when 2 then v.votenum else 0 end) mvote,sum(case v.wtid when 1 then v.votenum when 2 then v.votenum else 0 end) zvote from  users u inner join books b on b.uuid=u.uuid left join vote v on b.bookid = v.bookid and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(v.votetime) group by b.bookid) m on c.bookid = m.bookid left join (select b.bookid,count(bk.brid) bknum from books b left join bookrack bk on b.bookid = bk.bookid
        group by b.bookid) p on m.bookid = p.bookid) p on b.bookid = p.bookid
        left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid group by b.bookid order by r.rollid desc,c.chapnum desc) s4 on s4.bookid = b.bookid
        <if test="param2 != -1">
            where b.btid = ${param2}
        </if>
        order by p.pianli desc
        <if test="param1 != null">
            limit #{param1},10
        </if>
    </select>
    <select id="cankHotsell" parameterType="Integer" resultType="map">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookstate,b.bookreferral,bt.btid,bt.btname,ifnull(s4.chaptime,'') chaptime,ifnull(s4.chapid,-1) chapid,ifnull(s4.chapnum,-1) chapnum,ifnull((select chapname from chapter where chapid = s4.chapid),'暂时还没有章节') chapname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,x.buycum from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid left join (select b.bookid,ifnull(sum(floor((select chapcount from chapter where chapid = br.chapid)/200)),0) buycum from books b left join roll r on b.bookid = r.bookid and r.rollmoney = 2 left join chapter c on r.rollid = c.rollid left join buyrecord br on c.chapid = br.chapid and to_days(br.buydate) = to_days(now()) group by b.bookid) x on x.bookid = b.bookid
        left join (select b.bookid,c.chaptime,max(c.chapid) chapid,c.chapnum from books b left join roll r on b.bookid = r.bookid left join chapter c on c.rollid = r.rollid group by b.bookid order by r.rollid desc,c.chapnum desc) s4 on s4.bookid = b.bookid
        <if test="param2 != -1">
            where b.btid = ${param2}
        </if>
        order by x.buycum desc
        <if test="param1 != null">
            limit #{param1},10
        </if>
    </select>
    <select id="fans" resultType="map" parameterType="Integer">
        select u.uuid,u.uname,r.rewanum from users u inner join (select uuid,sum(rewanum) rewanum from reward
        <if test="_parameter == 1">
            where to_days(rewatime) = to_days(now())
        </if>
        group by uuid) r on u.uuid = r.uuid order by r.rewanum desc limit 0,100
    </select>
    <select id = "newBookClick" resultType="map">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,bt.btid,bt.btname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,c.cnum from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid left join (select b.bookid,ifnull(sum(c.cnum),0) cnum from books b left join click c on b.bookid = c.bookid
        group by b.bookid) c on c.bookid = b.bookid
        where DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(b.createtime)
        group by b.bookid
        order by c.cnum desc
        limit 0,18
    </select>
    <select id="querybrnum" resultType="map">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookstate,b.bookreferral,bt.btid,bt.btname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,bc.bknum from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid left join (select b.bookid,count(bk.brid) bknum from books b left join bookrack bk on b.bookid = bk.bookid
        group by b.bookid) bc on b.bookid = bc.bookid
        where DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(b.createtime)
        order by bc.bookid
        limit 0,12
    </select>
    <select id="recentUpdates" resultType="map">
        select u.uuid,u.uname,u.pen,b.bookid,b.bookname,b.bookreferral,bt.btid,bt.btname,ifnull(b.icon,'../images/2.jpg') icon,b.createtime,g.chapid,g.chapnum,g.chapname,g.chaptime from users u inner join books b on u.uuid = b.uuid inner join booktype bt on b.btid = bt.btid inner join (select b.bookid,c.chapid,c.chapnum,chapname,chaptime from books b inner join roll r on b.bookid = r.bookid inner join chapter c on r.rollid = c.rollid
        and DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(chaptime) group by b.bookid) g on b.bookid = g.bookid
    </select>
    <select id="queryFansByBookid" resultType="map">
        select u.uuid,u.uname,ifnull(u.icon,'1.jpg') icon,(ifnull(v.zvote,0)*100)+ifnull(r.rewanum,0) sums from users u left join
        (select v.uuid,b.bookid,sum(case v.wtid when 1 then v.votenum else 0 end) dvote,sum(case v.wtid when 2 then v.votenum else 0 end) mvote,sum(case v.wtid when 1 then v.votenum when 2 then v.votenum else 0 end) zvote from  users u inner join books b on b.uuid=u.uuid inner join vote v on b.bookid = v.bookid where b.bookid = #{param1} group by b.bookid,v.uuid) v on u.uuid = v.uuid left join
        (select u.uuid,r.rewanum from users u inner join (select uuid,sum(rewanum) rewanum from reward where bookid = #{param1} group by uuid) r on u.uuid = r.uuid)
        r on r.uuid = u.uuid
        order by sums desc
    </select>
</mapper>